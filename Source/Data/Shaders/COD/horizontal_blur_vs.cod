//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer ConstantBuffer
// {
//
//   float screenWidth;                 // Offset:    0 Size:     4
//   float3 padding;                    // Offset:    4 Size:    12 [unused]
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// ConstantBuffer                    cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// POSITION                 0   xyzw        0     NONE   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float   xyzw
// COLOR                    0   xyzw        1     NONE   float   xyzw
// TEXCOORD                 0   xy          2     NONE   float   xy  
// TEXCOORD                 1     zw        2     NONE   float     zw
// TEXCOORD                 2   xy          3     NONE   float   xy  
// TEXCOORD                 3     zw        3     NONE   float     zw
// TEXCOORD                 4   xy          4     NONE   float   xy  
// TEXCOORD                 5     zw        4     NONE   float     zw
// TEXCOORD                 6   xy          5     NONE   float   xy  
// TEXCOORD                 7     zw        5     NONE   float     zw
// TEXCOORD                 8   xy          6     NONE   float   xy  
// TEXCOORD                 9     zw        6     NONE   float     zw
//
vs_5_0
dcl_globalFlags refactoringAllowed | skipOptimization
dcl_constantbuffer CB0[1], immediateIndexed
dcl_input v0.xyzw
dcl_input v1.xyzw
dcl_input v2.xy
dcl_output_siv o0.xyzw, position
dcl_output o1.xyzw
dcl_output o2.xy
dcl_output o2.zw
dcl_output o3.xy
dcl_output o3.zw
dcl_output o4.xy
dcl_output o4.zw
dcl_output o5.xy
dcl_output o5.zw
dcl_output o6.xy
dcl_output o6.zw
dcl_temps 8
//
// Initial variable locations:
//   v0.x <- position.x; v0.y <- position.y; v0.z <- position.z; v0.w <- position.w; 
//   v1.x <- color.x; v1.y <- color.y; v1.z <- color.z; v1.w <- color.w; 
//   v2.x <- tex.x; v2.y <- tex.y; 
//   o6.x <- <main return value>.texcoord8.x; o6.y <- <main return value>.texcoord8.y; o6.z <- <main return value>.texcoord9.x; o6.w <- <main return value>.texcoord9.y; 
//   o5.x <- <main return value>.texcoord6.x; o5.y <- <main return value>.texcoord6.y; o5.z <- <main return value>.texcoord7.x; o5.w <- <main return value>.texcoord7.y; 
//   o4.x <- <main return value>.texcoord4.x; o4.y <- <main return value>.texcoord4.y; o4.z <- <main return value>.texcoord5.x; o4.w <- <main return value>.texcoord5.y; 
//   o3.x <- <main return value>.texcoord2.x; o3.y <- <main return value>.texcoord2.y; o3.z <- <main return value>.texcoord3.x; o3.w <- <main return value>.texcoord3.y; 
//   o2.x <- <main return value>.tex.x; o2.y <- <main return value>.tex.y; o2.z <- <main return value>.texcoord1.x; o2.w <- <main return value>.texcoord1.y; 
//   o1.x <- <main return value>.color.x; o1.y <- <main return value>.color.y; o1.z <- <main return value>.color.z; o1.w <- <main return value>.color.w; 
//   o0.x <- <main return value>.position.x; o0.y <- <main return value>.position.y; o0.z <- <main return value>.position.z; o0.w <- <main return value>.position.w
//
#line 6 "E:\2年後期\チE"
mov r0.xyzw, v0.xyzw  // r0.x <- vout.position.x; r0.y <- vout.position.y; r0.z <- vout.position.z; r0.w <- vout.position.w

#line 7
mov r1.xyzw, v1.xyzw  // r1.x <- vout.color.x; r1.y <- vout.color.y; r1.z <- vout.color.z; r1.w <- vout.color.w

#line 8
mov r2.xy, v2.xyxx  // r2.x <- vout.tex.x; r2.y <- vout.tex.y

#line 9
div r2.z, l(1.000000), cb0[0].x  // r2.z <- texelSize

#line 11
mul r3.z, r2.z, l(-4.000000)
mov r3.w, l(0)
add r3.xy, r3.zwzz, v2.xyxx  // r3.x <- vout.texcoord1.x; r3.y <- vout.texcoord1.y

#line 12
mul r4.x, r2.z, l(-3.000000)
mov r4.y, l(0)
add r3.zw, r4.xxxy, v2.xxxy  // r3.z <- vout.texcoord2.x; r3.w <- vout.texcoord2.y

#line 13
mul r4.z, r2.z, l(-2.000000)
mov r4.w, l(0)
add r4.xy, r4.zwzz, v2.xyxx  // r4.x <- vout.texcoord3.x; r4.y <- vout.texcoord3.y

#line 14
mul r5.x, r2.z, l(-1.000000)
mov r5.y, l(0)
add r4.zw, r5.xxxy, v2.xxxy  // r4.z <- vout.texcoord4.x; r4.w <- vout.texcoord4.y

#line 15
mul r5.z, r2.z, l(0.000000)
mov r5.w, l(0)
add r5.xy, r5.zwzz, v2.xyxx  // r5.x <- vout.texcoord5.x; r5.y <- vout.texcoord5.y

#line 16
mul r6.x, r2.z, l(1.000000)
mov r6.y, l(0)
add r5.zw, r6.xxxy, v2.xxxy  // r5.z <- vout.texcoord6.x; r5.w <- vout.texcoord6.y

#line 17
mul r6.z, r2.z, l(2.000000)
mov r6.w, l(0)
add r6.xy, r6.zwzz, v2.xyxx  // r6.x <- vout.texcoord7.x; r6.y <- vout.texcoord7.y

#line 18
mul r7.x, r2.z, l(3.000000)
mov r7.y, l(0)
add r6.zw, r7.xxxy, v2.xxxy  // r6.z <- vout.texcoord8.x; r6.w <- vout.texcoord8.y

#line 19
mul r2.z, r2.z, l(4.000000)
mov r2.w, l(0)
add r2.zw, r2.zzzw, v2.xxxy  // r2.z <- vout.texcoord9.x; r2.w <- vout.texcoord9.y

#line 21
mov o0.xyzw, r0.xyzw
mov o1.xyzw, r1.xyzw
mov o2.xy, r2.xyxx
mov o2.zw, r3.xxxy
mov o3.xy, r3.zwzz
mov o3.zw, r4.xxxy
mov o4.xy, r4.zwzz
mov o4.zw, r5.xxxy
mov o5.xy, r5.zwzz
mov o5.zw, r6.xxxy
mov o6.xy, r6.zwzz
mov o6.zw, r2.zzzw
ret 
// Approximately 44 instruction slots used
