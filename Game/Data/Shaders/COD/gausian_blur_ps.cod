//
// Generated by Microsoft (R) HLSL Shader Compiler 10.1
//
//
// Buffer Definitions: 
//
// cbuffer ConstantBuffer
// {
//
//   int SampleCount;                   // Offset:    0 Size:     4
//   float4 Offset[16];                 // Offset:   16 Size:   256
//
// }
//
//
// Resource Bindings:
//
// Name                                 Type  Format         Dim      HLSL Bind  Count
// ------------------------------ ---------- ------- ----------- -------------- ------
// ColorSampler                      sampler      NA          NA             s0      1 
// ColorBuffer                       texture  float4          2d             t0      1 
// ConstantBuffer                    cbuffer      NA          NA            cb0      1 
//
//
//
// Input signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_POSITION              0   xyzw        0      POS   float       
// COLOR                    0   xyzw        1     NONE   float       
// TEXCOORD                 0   xy          2     NONE   float   xy  
//
//
// Output signature:
//
// Name                 Index   Mask Register SysValue  Format   Used
// -------------------- ----- ------ -------- -------- ------- ------
// SV_TARGET                0   xyzw        0   TARGET   float   xyzw
//
ps_5_0
dcl_globalFlags refactoringAllowed
dcl_constantbuffer CB0[17], dynamicIndexed
dcl_sampler s0, mode_default
dcl_resource_texture2d (float,float,float,float) t0
dcl_input_ps linear v2.xy
dcl_output o0.xyzw
dcl_temps 2
mov r0.xyzw, l(0,0,0,0)
loop 
  ige r1.x, r0.w, cb0[0].x
  breakc_nz r1.x
  add r1.xy, v2.xyxx, cb0[r0.w + 1].xyxx
  sample_indexable(texture2d)(float,float,float,float) r1.xyz, r1.xyxx, t0.xyzw, s0
  mad r0.xyz, cb0[r0.w + 1].zzzz, r1.xyzx, r0.xyzx
  iadd r0.w, r0.w, l(1)
endloop 
mov o0.xyz, r0.xyzx
mov o0.w, l(1.000000)
ret 
// Approximately 12 instruction slots used
